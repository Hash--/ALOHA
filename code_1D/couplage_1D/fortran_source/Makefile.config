#Rappel : liste des variables predefinies : make -p | more

# The name of Fortran compiler
FORTRAN=f77
#FORTRAN=pgf90
#FORTRAN=g77 #gfortran

# If you need to link to dynamic libraries installed in non-standard
# locations and are using the GNU linker, you may want to add
# '-Wl,--rpath,/path/to/dynamic/library' to the 'LINKER' variable
# below. Alternatively, you could edit the 'LD_LIBARY_PATH'
# environement variable or use the 'ldconfig' program.
LINKER=${FORTRAN}

# Compiler flags
FORTRAN_FLAGS=-O -r8
#-I $(HOME)/codes/fortran/nag_f90_r3/nag_mod_dir/ -L $(HOME)/codes/fortran/nag_f90_r3/ 
#option -r8 pour deneb


# RAPPEL : OPTIONS F77 : 
# -g :  Produce additionalble information for dbx (1) or debugger (1). 
#		For separate compik steps: if you compile with -g , then be sure to link with -g . 
#		The -g no longer oO , but it does override the automatic inlining usually provided by -O4 .
# -O[1234] : Optimize the e. The -g option no longer suppresses -O n.
#   	* -O Optimize at tost likely to give close to the maximum performance for most realistic applications. (currently -O3)
#    	* -O1 Do only the ount of optimization (peephole). This is postpass assembly-level optimization.
#    	* -O2 Do basic locbal optimization. This level usually gives minimum code size. The details are: induction variable elimination, local and global common subexpression elimination, algebraic simplification, copy propagation, constant propagation, loop-invariant optimization, register allocation, basic block merging, tail recursion elimination, dead code elimination, tail call elimination, and complex expression expansion. Do not use -O2 unless -O3 results in excessive compilation time, running out of swap space, or excessively large code size.
#    	* -O3 Besides what this optimizes references and definitions of external variables.
#    	* -O4 Besides what this does automatic inlining of functions in the same file. Code usually runs faster, but for some codes, -O4 make them run slower. -g suppresses automatic inlining. In general, -O4 results in larger code.
# -r8 : Treat REAL as DOUBON. 
#		Adjusts declared vliteral constants, and intrinsic functions. 
#		Sets the default sAL, INTEGER, and LOGICAL to 8, for COMPLEX and DOUBLE PRECISION to 16, and for DOUBLE COMPLEX to 32. 

# Librairies utilisees
LIBNAG= -lnag #Deneb
LIBAIRY=-lairy
LIBFRT= -lfrtbegin

LIBGRILLDIR=-L 'lib/'
LIBGRILLNAME=libgrill.a

# sous fonctions utilisees
SUBFUN_SGRILL=S_grill.o
SUBFUN_SGRILL_DIR=S_grill

# FLAG LIB
LIBS=$(LIBNAG) #$(SUBFUN_SGRILL_DIR)/$(SUBFUN_SGRILL)

# sous repertoires des sous fonctions (contenant un Makefile)
SUBFUNS_DIR=S_grill

# executables a compiler
#EXEC=	coupl_plasma_version1\
#	coupl_plasma_version2\
EXEC=	coupl_plasma_version3
#\
#	coupl_plasma_version4\
#	coupl_plasma_version5\
#	coupl_plasma_version6\
#	coupl_plasma_version7

# How you create a static  this machine
#AR=/usr/bin/ar ruvs
#RANLIB=ranlib

# The extension to use fores...
#EXEEXT=.exe

# Installation directories
#prefix=/usr/local
#exec_prefix=${prefix}
#bindir=${exec_prefix}/bin
#datadir=${prefix}/share
#includedir=${prefix}/inclu
#libdir=${exec_prefix}/lib
#mandir=${prefix}/man
#infodir=${prefix}/info
